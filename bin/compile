#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

set -e            # fail fast
set -o pipefail   # don't ignore exit codes when piping output
# set -x          # enable debugging

# Configure directories
build_dir=$1
cache_dir=$2
env_dir=$3

bp_dir=$(cd $(dirname $0); cd ..; pwd)

# clean up leaking environment
unset GIT_DIR

# Load some convenience functions like status(), echo(), and indent()
source $bp_dir/bin/common.sh

source "$build_dir/_static.cfg"

if [ ! -e $build_dir/Procfile ]; then
  Generate_Procfile=true
fi

bp_dir=`cd $(dirname $0); cd ..; pwd`

if [[ ! -f $build_dir/404.html ]]; then
  if [[ ! -f $build_dir/404.htm ]]; then
    echo -n "-----> Renaming 404.htm to 404.html... "
    mv $build_dir/404.htm  $build_dir/404.html
    echo "done"
  else
    echo -n "-----> Vendoring default 404.html into slug... "
    mv $bp_dir/vendor/404.html  $build_dir/404.html
    echo "done"
  fi
fi

if [[ ! $SERVER_TYPE ]]; then
  SERVER_TYPE="node"
fi

if [[ $SERVER_TYPE == "node" || $SERVER_TYPE == "node.js" ]]; then

  if [ -f $build_dir/package.json ]; then
    echo "-----> Using existiong package.json"
  else
    echo -n "-----> Vendoring package.json for node into slug... "
    mv $bp_dir/vendor/package.json  $build_dir/package.json
    echo "done"
  fi

  if [ -f $build_dir/server.coffee ]; then
    echo "-----> Using existiong server.coffee"
  else
    echo -n "-----> Vendoring server.coffee for node into slug... "
    mv $bp_dir/vendor/server.coffee $build_dir/server.coffee
    echo "done"
  fi

  echo -n "-----> Vendoring lib files into slug... "
  if [ ! -d ${build_dir}/lib ]; then
    mkdir ${build_dir}/lib
  fi
  mv -f $bp_dir/vendor/lib/* $build_dir/lib
  echo "done"

  echo -n "-----> Vendoring Procfile into slug... "
  if [[ ! -f $build_dir/Procfile ]]; then
    echo "web: exec env NODE_PATH=\"\$(dirname \$(dirname \$0))/lib\" coffee server.coffee" > $build_dir/Procfile
    chmod +x $build_dir/Procfile
  fi
  echo "done"

  echo "-----> Initiating Node.js Buildpack... "
  NODE_BUILDPACK_DIR=$(mktemp -d -t node.XXXXXX)
  git clone --quiet https://github.com/heroku/heroku-buildpack-nodejs.git $NODE_BUILDPACK_DIR
  mv -f $NODE_BUILDPACK_DIR/vendor/* $bp_dir/vendor
  mv $NODE_BUILDPACK_DIR/bin/compile $bp_dir/bin/compile_node
  $bp_dir/bin/compile_node $build_dir $cache_dir | indent
  echo "       done."
  rm -fr $NODE_BUILDPACK_DIR

elif [[ $SERVER_TYPE == "express" || $SERVER_TYPE == "express.js" ]]; then

  if [ -f $build_dir/package.json ]; then
    echo "-----> Using existiong package.json"
  else
    echo -n "-----> Vendoring package.json for express into slug... "
    mv $bp_dir/vendor/package-express.json $build_dir/package.json
    echo "done"
  fi

  if [ -f $build_dir/server.coffee ]; then
    echo "-----> Using existiong server.coffee"
  else
    echo -n "-----> Vendoring server.coffee for express into slug... "
    mv $bp_dir/vendor/express.coffee $build_dir/server.coffee
    echo "done"
  fi

  echo -n "-----> Vendoring lib files into slug... "
  if [ ! -d ${build_dir}/lib ]; then
    mkdir ${build_dir}/lib
  fi
  mv -f $bp_dir/vendor/lib/* $build_dir/lib
  echo "done"

  echo -n "-----> Vendoring Procfile into slug... "
  if [[ ! -f $build_dir/Procfile ]]; then
    echo "web: exec env NODE_PATH=\"\$(dirname \$(dirname \$0))/lib\" coffee server.coffee" > $build_dir/Procfile
    chmod +x $build_dir/Procfile
  fi
  echo "done"

  echo "-----> Initiating Node.js Buildpack... "
  NODE_BUILDPACK_DIR=$(mktemp -d -t node.XXXXXX)
  git clone --quiet https://github.com/heroku/heroku-buildpack-nodejs.git $NODE_BUILDPACK_DIR
  mv -f $NODE_BUILDPACK_DIR/vendor/* $bp_dir/vendor
  mv $NODE_BUILDPACK_DIR/bin/compile $bp_dir/bin/compile_node
  $bp_dir/bin/compile_node $build_dir $cache_dir | indent
  echo "       done."
  rm -fr $NODE_BUILDPACK_DIR

elif [[ $SERVER_TYPE == "nginx" ]]; then

  # init default nginx configuration ----------

  if [ -d "${build_dir}/conf" ]; then
    echo "-----> Using existing nginx configuration."
  else
    echo -n "-----> Vendoring default nginx configuration into slug... "
    if [[ ! -d ${build_dir}/conf ]]; then
      mkdir ${build_dir}/conf
    fi
    mv $bp_dir/vendor/mime.types ${build_dir}/conf/mime.types
    mv $bp_dir/vendor/nginx.conf.erb ${build_dir}/conf/nginx.conf.erb
    echo "done"
  fi

  # Nginx -------------------------------------

  echo "-----> Initiating Nginx Buildpack... "
  NGINX_BUILDPACK_DIR=$(mktemp -d -t nginx.XXXXXX)
  git clone --quiet https://github.com/abhishekmunie/heroku-buildpack-nginx.git $NGINX_BUILDPACK_DIR
  mv -f $NGINX_BUILDPACK_DIR/vendor/* $bp_dir/vendor
  mv $NGINX_BUILDPACK_DIR/bin/compile $bp_dir/bin/compile_nginx
  $bp_dir/bin/compile_nginx $build_dir $cache_dir | indent
  echo "       done."
  rm -fr $NGINX_BUILDPACK_DIR

fi